{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","types/utilities.ts","components/TodoList/TodoList.tsx","components/TodoInfo/TodoInfo.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","users","setUser","user","errorUser","className","onChange","e","target","value","disabled","map","userItem","getUserByName","arr","find","getUsersEmailById","TodoList","usersFromServer","todos","todo","classNames","href","TodoInfo","setTitle","errorTitle","type","placeholder","App","useState","todosFromServer","setTodos","setErrorTitle","setErrorUser","action","method","onSubmit","event","preventDefault","Math","max","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48f5b515.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/types';\n\ntype Props = {\n  users: User[];\n  setUser: (n: number) => void;\n  user: number;\n  errorUser: boolean;\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  users,\n  setUser,\n  user,\n  errorUser,\n}) => {\n  const handleChange\n  = (e: React.ChangeEvent<HTMLSelectElement>) => setUser(+e.target.value);\n\n  return (\n    <div className=\"field\">\n      <select\n        data-cy=\"userSelect\"\n        onChange={handleChange}\n        value={`${user}`}\n      >\n        <option value=\"0\" disabled>\n          Choose a user\n        </option>\n        {users.map((userItem) => {\n          return (\n            <option value={`${userItem.id}`} key={userItem.id}>\n              {userItem.name}\n            </option>\n          );\n        })}\n      </select>\n      {errorUser\n        ? <span className=\"error\">Please choose a user</span> : null}\n    </div>\n  );\n};\n","import { User } from './types';\n\nexport const getUserByName = (arr: User[], id: number) => {\n  return arr.find(user => user.id === id)?.name || null;\n};\n\nexport const getUsersEmailById = (arr: User[], id: number) => {\n  return arr.find(user => user.id === id)?.email;\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo, User } from '../../types/types';\nimport { getUserByName, getUsersEmailById } from '../../types/utilities';\n\ntype Props = {\n  usersFromServer: User[];\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ usersFromServer, todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <article\n            key={todo.id}\n            data-id={todo.id}\n            className={classNames('TodoInfo', {\n              'TodoInfo--completed': todo.completed,\n            })}\n          >\n            <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n            <a\n              className=\"UserInfo\"\n              href={`mailto:${getUsersEmailById(usersFromServer, todo.userId)}`}\n            >\n              {getUserByName(usersFromServer, todo.userId)}\n            </a>\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n","type Props = {\n  title: string;\n  setTitle: (s: string) => void;\n  errorTitle: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, setTitle, errorTitle }) => {\n  return (\n    <div className=\"field\">\n      <input\n        type=\"text\"\n        data-cy=\"titleInput\"\n        value={title}\n        placeholder=\"Enter new todo \"\n        onChange={(e) => setTitle(e.target.value)}\n      />\n\n      {errorTitle ? (\n        <span className=\"error\">Please enter a title</span>\n      ) : null}\n    </div>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { UserInfo } from './components/UserInfo';\nimport { Todo } from './types/types';\nimport { TodoList } from './components/TodoList';\nimport { TodoInfo } from './components/TodoInfo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState<string>('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [user, setUser] = useState(0);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const resetInputs = () => {\n    setTitle('');\n    setUser(0);\n    setErrorTitle(false);\n    setErrorUser(false);\n  };\n\n  const maxTodoIndex = (arr: Todo[]) => {\n    const max = Math.max(...arr.map((todo) => todo.id));\n\n    return max + 1;\n  };\n\n  const onAddTodo = (todo: Todo) => {\n    setTodos((prevTodos) => [...prevTodos, todo]);\n  };\n\n  const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n\n    if (!user) {\n      setErrorUser(true);\n    }\n\n    if (!title || !user) {\n      return;\n    }\n\n    onAddTodo({\n      id: maxTodoIndex(todos),\n      title,\n      completed: false,\n      userId: user,\n    });\n\n    resetInputs();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form action=\"/api/users\" method=\"POST\" onSubmit={onSubmitHandler}>\n        <TodoInfo title={title} setTitle={setTitle} errorTitle={errorTitle} />\n        <UserInfo\n          users={usersFromServer}\n          setUser={setUser}\n          user={user}\n          errorUser={errorUser}\n        />\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList usersFromServer={usersFromServer} todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}